name: Deploy Worker

on:
  # 添加手动触发选项
  workflow_dispatch:
  
  # 在推送到主分支时触发
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    name: Deploy Worker
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      
      - name: Install dependencies
        run: npm install wrangler
      
      - name: Check available secrets
        run: |
          echo "检查可用的 secrets..."
          echo "CLOUDFLARE_API_KEY 是否设置: ${{ secrets.CLOUDFLARE_API_KEY != '' }}"
          echo "CLOUDFLARE_API_TOKEN 是否设置: ${{ secrets.CLOUDFLARE_API_TOKEN != '' }}"
          echo "CLOUDFLARE_ACCOUNT_ID 是否设置: ${{ secrets.CLOUDFLARE_ACCOUNT_ID != '' }}"
      
      - name: Deploy Worker
        env:
          # 尝试两种可能的 secret 名称
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN || secrets.CLOUDFLARE_API_KEY }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        run: |
          echo "开始部署 Worker..."
          echo "使用账户 ID: $CLOUDFLARE_ACCOUNT_ID"
          echo "API 令牌是否设置: ${{ env.CLOUDFLARE_API_TOKEN != '' }}"
          
          # 检查环境变量是否设置
          if [ -z "$CLOUDFLARE_API_TOKEN" ]; then
            echo "错误: CLOUDFLARE_API_TOKEN 未设置"
            exit 1
          fi
          
          if [ -z "$CLOUDFLARE_ACCOUNT_ID" ]; then
            echo "错误: CLOUDFLARE_ACCOUNT_ID 未设置"
            exit 1
          fi
          
          echo "wrangler.toml 内容:"
          cat wrangler.toml
          
          # 使用 npx wrangler 部署
          npx wrangler deploy
